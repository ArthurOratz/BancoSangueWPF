// <auto-generated />
using System;
using BancoDeSangueWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BancoDeSangueWeb.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20201208052053_coletaRetirada")]
    partial class coletaRetirada
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BancoDeSangueWeb.Models.Coleta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DoadorId")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<double>("Quantidade")
                        .HasColumnType("float");

                    b.Property<int?>("TipoSanguineoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoadorId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("TipoSanguineoId");

                    b.ToTable("Coleta");
                });

            modelBuilder.Entity("BancoDeSangueWeb.Models.Doador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoSanguineoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoSanguineoId");

                    b.ToTable("Doador");
                });

            modelBuilder.Entity("BancoDeSangueWeb.Models.EstoqueSangue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("TipoSanguineoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoSanguineoId");

                    b.ToTable("EstoqueSangue");
                });

            modelBuilder.Entity("BancoDeSangueWeb.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("BancoDeSangueWeb.Models.Hospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome_Responsavel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hospital");
                });

            modelBuilder.Entity("BancoDeSangueWeb.Models.Retirada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HospitalId")
                        .HasColumnType("int");

                    b.Property<double>("Quantidade")
                        .HasColumnType("float");

                    b.Property<int?>("TipoSanguineoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HospitalId");

                    b.HasIndex("TipoSanguineoId");

                    b.ToTable("Retirada");
                });

            modelBuilder.Entity("BancoDeSangueWeb.Models.TipoSanguineo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("FatorRH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoSanguineo");
                });

            modelBuilder.Entity("BancoDeSangueWeb.Models.Coleta", b =>
                {
                    b.HasOne("BancoDeSangueWeb.Models.Doador", "Doador")
                        .WithMany()
                        .HasForeignKey("DoadorId");

                    b.HasOne("BancoDeSangueWeb.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("BancoDeSangueWeb.Models.TipoSanguineo", "TipoSanguineo")
                        .WithMany()
                        .HasForeignKey("TipoSanguineoId");

                    b.Navigation("Doador");

                    b.Navigation("Funcionario");

                    b.Navigation("TipoSanguineo");
                });

            modelBuilder.Entity("BancoDeSangueWeb.Models.Doador", b =>
                {
                    b.HasOne("BancoDeSangueWeb.Models.TipoSanguineo", "TipoSanguineo")
                        .WithMany("Doadores")
                        .HasForeignKey("TipoSanguineoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoSanguineo");
                });

            modelBuilder.Entity("BancoDeSangueWeb.Models.EstoqueSangue", b =>
                {
                    b.HasOne("BancoDeSangueWeb.Models.TipoSanguineo", "TipoSanguineo")
                        .WithMany()
                        .HasForeignKey("TipoSanguineoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoSanguineo");
                });

            modelBuilder.Entity("BancoDeSangueWeb.Models.Retirada", b =>
                {
                    b.HasOne("BancoDeSangueWeb.Models.Hospital", "Hospital")
                        .WithMany()
                        .HasForeignKey("HospitalId");

                    b.HasOne("BancoDeSangueWeb.Models.TipoSanguineo", "TipoSanguineo")
                        .WithMany()
                        .HasForeignKey("TipoSanguineoId");

                    b.Navigation("Hospital");

                    b.Navigation("TipoSanguineo");
                });

            modelBuilder.Entity("BancoDeSangueWeb.Models.TipoSanguineo", b =>
                {
                    b.Navigation("Doadores");
                });
#pragma warning restore 612, 618
        }
    }
}
